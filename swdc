#!/usr/bin/env bash

export COMPOSE_PROJECT_NAME="shopware-docker"
export DOCKER_COMPOSE_FILE="/tmp/swdc-docker-compose.yml"

if ! docker compose 1> /dev/null 2> /dev/null; then
  echo "> docker-compose v2 is now required. Please install from https://docs.docker.com/compose/install/"
  exit 1
fi

FILE="$0"

if [[ -L "$0" ]]; then
  FILE="$(readlink "${0}")"
fi

DIR="$(dirname "${FILE}")"
REALDIR="$(cd "$(dirname "${DIR}")" && pwd)/$(basename "${DIR}")"
DIR=$REALDIR
CONFIG_DIR=${XDG_CONFIG_HOME:-${HOME}/.config}
export DIR="${DIR}"
export REALDIR="${REALDIR}"

# shellcheck source=functions.sh
source "${DIR}/functions.sh"

if [[ ! -d "${CONFIG_DIR}/swdc" ]]; then
  mkdir -p "${CONFIG_DIR}/swdc"
fi

if [[ -f "${HOME}/.swdc_env" ]]; then
  mv "${HOME}/.swdc_env" "${CONFIG_DIR}/swdc/env"
fi

if [[ ! -f "${CONFIG_DIR}/swdc/env" ]]; then
  cp "${DIR}/.env.dist" "${CONFIG_DIR}/swdc/env"
fi

# shellcheck source=.env.dist
source "${DIR}/.env.dist"
# shellcheck source=.env.dist
source "${CONFIG_DIR}/swdc/env"
# shellcheck source=docker.env
source "${DIR}/docker.env"

if [[ ! -d "${CONFIG_DIR}/swdc/ssl" ]]; then
  mkdir -p "${CONFIG_DIR}/swdc/ssl"
  generate_wildcard_certs
fi

SHOPWARE_PROJECT="$2"
export SHOPWARE_FOLDER="${CODE_DIRECTORY}/${SHOPWARE_PROJECT}"

# Need to be in docker folder for docker-compose
cd "${DIR}" || exit 1

modules=(base)

if [[ -f "${CODE_DIRECTORY}/${2}/src/Kernel.php" || -f "${CODE_DIRECTORY}/${2}/src/Core/composer.json" ]]; then
  modules=(base platform-local)
fi

if [[ "${1}" == "" ]]; then
  source modules/base/command-list.sh
  exit 1
fi

for module in "${modules[@]}"; do
  # shellcheck source=/dev/null
  if [[ -f "./modules/${module}/${1}.sh" ]]; then
    # shellcheck source=/dev/null
    source "./modules/${module}/${1}.sh"
    exit 0
  fi

  # shellcheck source=/dev/null
  if [[ -f "$HOME/.config/swdc/modules/${module}/${1}.sh" ]]; then
    # shellcheck source=/dev/null
    source "$HOME/.config/swdc/modules/${module}/${1}.sh"
    exit 0
  fi
done

if [[ "$RUN_MODE" == 'local' ]]; then
  source "$REALDIR/swdc-inside"
else
  compose exec cli bash /opt/swdc/swdc-inside "$@"
fi
